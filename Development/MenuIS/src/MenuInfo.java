
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author msi
 */
public class MenuInfo extends javax.swing.JFrame {

    DefaultTableModel tableModel;

    /**
     *
     */
    public ArrayList<Television> tvList = new ArrayList<>();
    public ArrayList<Television> sortedTvList = new ArrayList<>();
    //public ArrayList<Television> textTvList = new ArrayList<>();
    //private Television Television;
   
    /**
     * Creates new form LogInMain
     */
    public MenuInfo() {

        initComponents();
        
        tableModel = (DefaultTableModel) tableTV.getModel();
        preDaten();
        
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPanelGroup = new javax.swing.ButtonGroup();
        jMenu1 = new javax.swing.JMenu();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuItem3 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        panelAdd = new javax.swing.JPanel();
        comboRes = new javax.swing.JComboBox<>();
        radBtn1 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        radBtn2 = new javax.swing.JRadioButton();
        radBtn3 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        comboCompany = new javax.swing.JComboBox<>();
        txtModel = new javax.swing.JTextField();
        comboSize = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        panelTable = new javax.swing.JPanel();
        comboSelect = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTV = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnDelSelected = new javax.swing.JButton();
        btnClearSrc = new javax.swing.JButton();
        btnSort = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemClear = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemUser = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(128, 0, 0));

        jPanel1.setBackground(new java.awt.Color(24, 121, 233));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 109, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(65, 132, 132));

        panelAdd.setBackground(new java.awt.Color(51, 51, 51));

        comboRes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Resolution", "720p", "1080p", "2k", "4k" }));

        radBtn1.setBackground(new java.awt.Color(255, 255, 255));
        btnPanelGroup.add(radBtn1);
        radBtn1.setForeground(new java.awt.Color(255, 255, 255));
        radBtn1.setText("LCD");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Resolution");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Panel");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Company:");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Model no");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Price");

        radBtn2.setBackground(new java.awt.Color(255, 255, 255));
        btnPanelGroup.add(radBtn2);
        radBtn2.setForeground(new java.awt.Color(255, 255, 255));
        radBtn2.setText("IPS");
        radBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBtn2ActionPerformed(evt);
            }
        });

        radBtn3.setBackground(new java.awt.Color(255, 255, 255));
        btnPanelGroup.add(radBtn3);
        radBtn3.setForeground(new java.awt.Color(255, 255, 255));
        radBtn3.setText("OLED");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Size:");

        comboCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Company", "Sony", "Samsung", "LG", "TCL" }));
        comboCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCompanyActionPerformed(evt);
            }
        });

        txtModel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtModelKeyPressed(evt);
            }
        });

        comboSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Size", "24", "32", "40", "42", "55", "65", "85" }));

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddLayout = new javax.swing.GroupLayout(panelAdd);
        panelAdd.setLayout(panelAddLayout);
        panelAddLayout.setHorizontalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboCompany, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radBtn1)
                                    .addComponent(radBtn2)
                                    .addComponent(radBtn3)
                                    .addComponent(txtModel)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addComponent(comboRes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClear))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelAddLayout.setVerticalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(radBtn1))
                .addGap(18, 18, 18)
                .addComponent(radBtn2)
                .addGap(18, 18, 18)
                .addComponent(radBtn3)
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboRes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTable.setBackground(new java.awt.Color(51, 51, 51));
        panelTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(1, 35, 63)));

        comboSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Price", "Company", "Size" }));

        tableTV.setAutoCreateRowSorter(true);
        tableTV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Model no", "Companyl", "Size", "Panel", "Resolution", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTV.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableTV);
        if (tableTV.getColumnModel().getColumnCount() > 0) {
            tableTV.getColumnModel().getColumn(0).setResizable(false);
            tableTV.getColumnModel().getColumn(1).setResizable(false);
            tableTV.getColumnModel().getColumn(2).setResizable(false);
            tableTV.getColumnModel().getColumn(3).setResizable(false);
            tableTV.getColumnModel().getColumn(4).setResizable(false);
            tableTV.getColumnModel().getColumn(5).setResizable(false);
        }

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelSelected.setText("Delete selected");
        btnDelSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelSelectedActionPerformed(evt);
            }
        });

        btnClearSrc.setText("Clear");
        btnClearSrc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSrcActionPerformed(evt);
            }
        });

        btnSort.setText("Sort");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Fax", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(141, 202, 255));
        jLabel6.setText("Televison Details");

        javax.swing.GroupLayout panelTableLayout = new javax.swing.GroupLayout(panelTable);
        panelTable.setLayout(panelTableLayout);
        panelTableLayout.setHorizontalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTableLayout.createSequentialGroup()
                        .addGroup(panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTableLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(comboSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearSrc)
                                .addGap(70, 70, 70))
                            .addGroup(panelTableLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(6, Short.MAX_VALUE))
                    .addGroup(panelTableLayout.createSequentialGroup()
                        .addComponent(btnDelSelected)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSort)
                        .addGap(24, 24, 24))))
            .addGroup(panelTableLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jLabel6)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelTableLayout.setVerticalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnClearSrc))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelSelected)
                    .addComponent(btnSort))
                .addContainerGap())
        );

        jLayeredPane1.setBackground(new java.awt.Color(1, 35, 63));
        jLayeredPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/91cce628-05dc-45f3-b505-07978193ee2c.png"))); // NOI18N

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(65, 132, 132));
        jTextField1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(141, 202, 255));
        jTextField1.setText("              EXPERIENCE TRUE VISION");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTextField1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLayeredPane1)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 32, Short.MAX_VALUE)
                        .addComponent(panelAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(panelTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(panelAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jMenuFile.setText("File");
        jMenuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileActionPerformed(evt);
            }
        });

        jMenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/file.jpg"))); // NOI18N
        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpen);

        jMenuItemClear.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clear.jpg"))); // NOI18N
        jMenuItemClear.setText("Clear");
        jMenuItemClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemClearActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemClear);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit1.png"))); // NOI18N
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuHelp.setText("Help");
        jMenuHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpActionPerformed(evt);
            }
        });

        jMenuItemUser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user.jpg"))); // NOI18N
        jMenuItemUser.setText("UserGuide");
        jMenuItemUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUserActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemUser);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(983, 983, 983)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(713, 713, 713))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 1072, 829);
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        toClear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void comboCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCompanyActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        //System.out.println("called1");
        try {
            String model = txtModel.getText();
            String company = (String) comboCompany.getSelectedItem();
            String size = (String) comboSize.getSelectedItem();

            String panel = null;

            if (radBtn1.isSelected()) {
                panel = radBtn1.getText();
            }

            if (radBtn2.isSelected()) {
                panel = radBtn2.getText();
            }

            if (radBtn3.isSelected()) {
                panel = radBtn3.getText();
            }

            String resol = (String) comboRes.getSelectedItem();

            int price = Integer.parseInt(txtPrice.getText());
            
            
            Television tvAdd =  new Television(model, company, size, panel, resol, price);
            
            //validating
            if (price != 0) {
                if (comboRes.getSelectedIndex() != 0) {
                    if (panel != null) {
                        if (comboSize.getSelectedIndex() != 0) {
                            if (comboCompany.getSelectedIndex() != 0) {
                                if (!model.isEmpty()) {
                                    if(toCheck(model, 0)){
     
                                    tvList.add (tvAdd);//adding in arraylist, default
                                    //tvListSorted.add (tvAdd);//adding in arraylist sorted
                                    tableModel.addRow(tvAdd.getTV());// adding in jTable
                                    
                                    JOptionPane.showMessageDialog(rootPane, model + " has been added to the system");
                                        
                                    }
                                    else{
                                        JOptionPane.showMessageDialog(rootPane, "Duplicate value for model no: "+ model, "Duplicate Model", JOptionPane.WARNING_MESSAGE);
                                    }

                                } 
                                else {
                                    JOptionPane.showMessageDialog(rootPane, "Please enter the model number");
                                }
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Please select the Company");
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Please select the Size");
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Please select the Panel Type");
                    }

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Please select the Resolution");
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Please enter the Price");
            }
        } 
        
        catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                    "Error: Invalid Input ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void radBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radBtn2ActionPerformed

    private void btnDelSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelSelectedActionPerformed
        // TODO add your handling code here:
            try{
                int selectedRowIndex = tableTV.getSelectedRow();
                String delArr = String.valueOf(tableTV.getValueAt(selectedRowIndex,0));
                System.out.println(selectedRowIndex);
                if (tvList.size() > 0 ){
                    for (Television t: tvList){
                        String strArr = t.getModel();
                        if (strArr.equals(delArr)){
                            //tvList.remove(t.getModel());
                            tvList.remove(t);
                            System.out.println("deleted data " + strArr);
                        }
                    //System.out.println("left data " + t.getModel());
                        
                    }     
                }
                
                tableModel.removeRow(selectedRowIndex);
                
                
                
            }
            catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Press delete selected again to delete",
                    "Error", JOptionPane.WARNING_MESSAGE);
            }        

    }//GEN-LAST:event_btnDelSelectedActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        
        int searchType = (int)comboSelect.getSelectedIndex();
        //emptyTable();
        //showDefault();
        System.out.println("left data ");
        
        switch (searchType) {
            case 0:
                JOptionPane.showMessageDialog(rootPane, "Please select a specific field to search");
                break;
            case 1:
                //JOptionPane.showMessageDialog(rootPane, "for price");
                
                if(!txtSearch.getText().isEmpty()){
                    
                    
                    toSort();
                    
                    
                    int abby = Integer.parseInt(txtSearch.getText().trim());
                    int tvIndex = binarySearch(sortedTvList, 0, sortedTvList.size(), abby);
                    
                    try{
                        if(tvIndex >= 0){
                            Television t = (sortedTvList.get(tvIndex));
                            String tvModel = t.getModel();
                            String tvPrice = Integer.toString(t.getPrice());
                            
                            JOptionPane.showMessageDialog(rootPane, "TV Model is: " + tvModel + "\n" + "TV Price is: " + tvPrice );
                            
                            //emptyTable();
                            //showPrice();
                        }
                        else{
                            JOptionPane.showMessageDialog(rootPane, abby + " does not exits, please input another price" );
                        }
                    }
                    
                    catch (Exception e) {
                        JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Error: In Search", JOptionPane.ERROR_MESSAGE);
                    }
                    
                    
                    
                    //binarySearch(ArrayList<Television> sortedTvList, int first, int last, int key);
                    
                }
                
                else{
                    JOptionPane.showMessageDialog(rootPane, "Please input the price");
                }   break;
            case 2:
                //JOptionPane.showMessageDialog(rootPane, "for Company");
                {
                toSort();
                    
                    int rowCount = tableTV.getRowCount();
                    String chkSearch = txtSearch.getText();
                    if(!chkSearch.isEmpty()){
                        for(int i = 0; i < rowCount; i++ ){
                            String chkModel = (String) tableTV.getValueAt(i, 0);
                            String chkCompany = (String) tableTV.getValueAt(i, 1);
                            String price = (String) tableTV.getValueAt(i, 5);
                            //int chkPrice=(int) tableTV.getValueAt(i, 5);
                            int chkPrice = Integer.parseInt(price);
                            
                            if(chkSearch.equals("Sony") || chkSearch.equals("Samsung") || chkSearch.equals("LG") || chkSearch.equals("TCL")){
                            
                                if (chkCompany.equals(chkSearch)){
                                    JOptionPane.showMessageDialog(rootPane,"Product Found for " +  chkCompany + "\n" +
                                            "Product Name: " + chkModel + "\n" + "Price: " + chkPrice );
                                    //emptyTable();
                                    //showCompany();
                                    break;

                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(rootPane,"The following company " + chkSearch + " does not exist" );
                                break;
                            }
                        }
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(rootPane, "Please enter name of Company");
                    }      
                    
                    break;
                }
            default:
                {
                    int rowCount = tableTV.getRowCount();
                    String chkSearch = txtSearch.getText();
                    if(!chkSearch.isEmpty()){
                        for(int i = 0; i < rowCount; i++ ){
                            String chkModel = (String) tableTV.getValueAt(i, 0);
                            String chkCompany = (String) tableTV.getValueAt(i, 1);
                            String chkPrice = (String) tableTV.getValueAt(i, 5);
                            String chkSize = (String) tableTV.getValueAt(i, 2);
                            
                            
                            try{
                                
                                if(chkSearch.equals("24") || chkSearch.equals("32") || chkSearch.equals("40") || chkSearch.equals("42")
                                        || chkSearch.equals("55") || chkSearch.equals("65") || chkSearch.equals("85")){
                                    
                                    if (chkSize.equals(chkSearch)){
                                        JOptionPane.showMessageDialog(rootPane,"Product Found for " +  chkCompany + "\n" +
                                            "Product Name: " + chkModel + "\n" + "Price: " + chkPrice );

                                        //emptyTable();
                                        //showSize();
                                        break;

                                    }
                                }
                                
                                else{
                                    JOptionPane.showMessageDialog(rootPane,"The following size " + chkSearch + " does not exist"  );
                                    break;
                                }
                                
                                
                            }
                            catch (Exception e) {
                                JOptionPane.showMessageDialog(rootPane, "Not Found", "Error: In Search", JOptionPane.ERROR_MESSAGE);
                            }
                            
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(rootPane, "Please enter correct size");
                    }       
                    
                    //break;
                }
        }
        
        

    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtModelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModelKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelKeyPressed

    private void btnClearSrcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSrcActionPerformed
        // TODO add your handling code here:
        txtSearch.setText("");
    }//GEN-LAST:event_btnClearSrcActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUserActionPerformed
         try{

                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\2018-19-A-CS5004NI-A1-CW-GroupWork-17030975-Anuska Neupane\\Documentation\\user guide.pdf");
            }
            catch (Exception e)
                    {
                        JOptionPane.showMessageDialog(null,"Error");
                    }

    }//GEN-LAST:event_jMenuItemUserActionPerformed

    private void jMenuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuFileActionPerformed

    private void jMenuItemClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemClearActionPerformed
        // TODO add your handling code here:
        toClear();
        
    }//GEN-LAST:event_jMenuItemClearActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jMenuHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpActionPerformed
          
    }//GEN-LAST:event_jMenuHelpActionPerformed

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        try{

                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\2018-19-A-CS5004NI-A1-CW-GroupWork-17030975-Anuska Neupane\\Documentation\\2018-19-A-CS5004NI-A1-CW-GroupWork-17030975-Anuska Neupane.pdf");
            }
            catch (Exception e)
                    {
                        JOptionPane.showMessageDialog(null,"Error");
                    }
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        // TODO add your handling code here:
        
        
        emptyTable();//empties table
        toSort();//Sorts data from tvlist to new arraylist
        showPrice();//displays sortedTvlist in table
        sortedTvList.clear();//empties arraylist sortedTvList
        //btnSort.setEnabled(false);
        
    }//GEN-LAST:event_btnSortActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuInfo().setVisible(true);

            }
        });

    }

    public void toClear() {
        //resetting all input values
        txtModel.setText("");
        comboCompany.setSelectedIndex(0);
        comboSize.setSelectedIndex(0);
        btnPanelGroup.clearSelection();
        comboRes.setSelectedIndex(0);
        txtPrice.setText("");
        txtSearch.setText("");
        
        /*if (tvList.size() > 0 ){
            for (Television t: tvList){
                System.out.println(t.getModel());
            }
        }*/
        
    }

   

   
    public boolean toCheck(String model, int colIndex){
        //checks variables from above where method is called
        boolean chkDup  = false;
        int rows = tableTV.getRowCount();
        int countVal = 0;
        for(int j = 0; j < rows; j++){
            //System.out.println("check loop" + j);
            String modelDup = String.valueOf(tableTV.getValueAt(j,colIndex));
            //System.out.println("model for modelDup  " + modelDup);
            if(modelDup.equals(model)){//checks inserted value and value in table
               countVal++;//if true then counter is increased
               //System.out.println("countVal increase " + countVal);
            }
        }   
        if (countVal == 0){
            //if counter not increased then boolean value true is set 
            chkDup = true;
            //System.out.println(chkDup);
        }
        return chkDup;//returns boolean value
    }

    /*public ArrayList tvtvtv(){
        ArrayList<tel> list = new ArrayList<>();
        tel t1 =  new tele(model,"Sony","32","LCD","720p","1200");
    
    }*/

    
    
    public void preDaten(){
        
        //Declaring Data to be added
        Television t1 =  new Television("S11","Sony","32","LCD","720p",12000);
        Television t2 =  new Television("S12","Sony","42","LCD","1080p",15000);
        Television t3 =  new Television("T11","TCL","32","LCD","720p",10000);
        Television t4 =  new Television("SG11","Samsung","55","OLED","4k",25000);
        Television t5 = new Television("L7", "LG", "40", "LCD", "2k",20000);
        Television t6 =  new Television("SG5","Samsung", "85", "OLED","4k",120000);
        Television t7 =  new Television("T05","TCL", "24", "IPS","1080P",25000);
        Television t8 =  new Television("L9","LG", "55", "IPS","2K",30000);
        Television t9 =  new Television("S13","Sony", "85", "OLED","4k",130000);
        Television t10 =  new Television("SG6","Samsung", "24", "LCD","720P",10000);
        Television t11 =  new Television("T10","TCL", "65", "OLED","2k",32000);
        Television t12 =  new Television("L8","LG", "42", "OLED","LCD",27000);
        Television t13 =  new Television("S14","Sony", "65", "OLED","2k",34000);
        Television t14 =  new Television("SG7","Samsung", "40", "IPS","1080P",23000);
        Television t15 =  new Television("L10","LG", "85", "OLED","4k",150000);
        Television t16 =  new Television("T09","TCL", "85", "LCD","4k",100000);
        
        
        
        //Adding above data to arraylist called tvList
        tvList.add (t1);
        tvList.add (t2);
        tvList.add (t3);
        tvList.add (t4);
        tvList.add(t5);
        tvList.add(t6);
        tvList.add(t7);
        tvList.add(t8);
        tvList.add(t9);
        tvList.add(t10);
        tvList.add(t11);
        tvList.add(t12);
        tvList.add(t13);
        tvList.add(t14);
        tvList.add(t15);
        tvList.add(t16);
        
        
        //Adding above data to table
        tableModel.addRow(t1.getTV());
        tableModel.addRow(t2.getTV());
        tableModel.addRow(t3.getTV());
        tableModel.addRow(t4.getTV());
        tableModel.addRow(t5.getTV());
        tableModel.addRow(t6.getTV());
        tableModel.addRow(t7.getTV());
        tableModel.addRow(t8.getTV());
        tableModel.addRow(t9.getTV());
        tableModel.addRow(t10.getTV());
        tableModel.addRow(t11.getTV());
        tableModel.addRow(t12.getTV());
        tableModel.addRow(t13.getTV());
        tableModel.addRow(t14.getTV());
        tableModel.addRow(t15.getTV());
        tableModel.addRow(t16.getTV());

    }
    
    
    public void toSort(){
        //Method Used to Sort Data
        if (tvList.size() > 0 ){
            //Checking individual elements in arraylist called tvList
            for (Television tv: tvList){
                    //System.out.println(tv.getModel());
                    int l = tvList.size() - 1;
                    if (l > 1 ){             
                        for (int a = 0; a < l; a++){
                            int b = a+1;
                            //assigning index to get value from arraylist
                            int priceA = tvList.get(a).getPrice();
                            //System.out.println("price A " + priceA);
                            int priceB = tvList.get(b).getPrice();
                            //System.out.println("price B " + priceB);
                            int lastP = tvList.get(l).getPrice();
                            //System.out.println("last P " + lastP);
                            int testP = tv.getPrice();
                            //System.out.println("testp " + testP);

                            //Checks and adds value to new arrayList
                            if ( priceA >= testP ){
                                sortedTvList.add(a, tv);
                                break;
                            }

                            else if ( ( priceA < testP) &&  (priceB > testP)){
                                sortedTvList.add(b, tv);
                                break;
                            }
                            else if ( lastP <= testP){
                                sortedTvList.add(tv);
                                break;
                            }
                        }
                    }
                    else{
                        sortedTvList.add(tv);
                    }
            }
        
        /*for(Television tv: sortedTvList){
            System.out.println("sorted" + tv.getModel());
        }*/
        }
    
    }


    
    public int binarySearch(ArrayList<Television> sortedTvList, int first, int last, int key){
        //Checks from above declared variables where method is used
        if (last>=first){ 
            //System.out.println("1");
            int midIndex = first + (last - first)/2;
            int m = (sortedTvList.get(midIndex)).getPrice();  
            if (m == key){
                //System.out.println("2");
                return midIndex;

            }  
            if (m > key){
                //System.out.println("3");
                return binarySearch(sortedTvList, first, midIndex-1, key);

            }
            else{
                //.out.println("4");
                return binarySearch(sortedTvList, midIndex+1, last, key);  
            }  
        }

        //System.out.println("5");
        return -1;
    
}
    
    
    public void emptyTable(){
        for (int i = 0; i < tableTV.getRowCount(); i++){
            tableModel.setRowCount(0);
            //for(int j = 0; j < tableTV.getColumnCount(); j++) {
            //tableTV.setValueAt("", i, j);
        //}
        }
    }
    
    public void showPrice(){
        
        if (sortedTvList.size() > 0 ){
            for (Television t: sortedTvList){
                Object tvPrice [] = {t.getModel(), t.getCompany(), t.getSize(), t.getPanel(), t.getResol(), t.getPrice()};
                tableModel.addRow(tvPrice);
                
            }
        }   
    
    }
    
  
    public void showDefault(){
        
        if (tvList.size() > 0 ){
            for (Television t: tvList){
                Object tvPrice [] = {t.getModel(), t.getCompany(), t.getSize(), t.getPanel(), t.getResol(), t.getPrice()};
                tableModel.addRow(tvPrice);   
            }
        }   
    
    }
    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClearSrc;
    private javax.swing.JButton btnDelSelected;
    private javax.swing.ButtonGroup btnPanelGroup;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSort;
    private javax.swing.JComboBox<String> comboCompany;
    private javax.swing.JComboBox<String> comboRes;
    private javax.swing.JComboBox<String> comboSelect;
    private javax.swing.JComboBox<String> comboSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItemClear;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenuItem jMenuItemUser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel panelAdd;
    private javax.swing.JPanel panelTable;
    private javax.swing.JRadioButton radBtn1;
    private javax.swing.JRadioButton radBtn2;
    private javax.swing.JRadioButton radBtn3;
    private javax.swing.JTable tableTV;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
